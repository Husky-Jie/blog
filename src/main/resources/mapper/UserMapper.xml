<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.husky.mapper.UserMapper">
    <sql id="Base_Column_List">
        user_id, user_name, user_pass, user_nickname, user_email, user_url, user_avatar,
    user_last_login_ip, user_register_time, user_last_login_time, user_status, user_role
    </sql>

    <!--根据用户名或电子邮箱查询-->
    <select id="selectUser" parameterType="String" resultType="com.husky.entity.User">
        select <include refid="Base_Column_List"/> from user
        <where>
            user_name=#{user_name} or user_email=#{user_email}
        </where>
    </select>

    <update id="UpdateUser" parameterType="com.husky.entity.User">
        update user
        <set>
            <if test="userName != null">user_name = #{userName,jdbcType=VARCHAR},</if>
            <if test="userPass != null">user_pass = #{userPass,jdbcType=VARCHAR},</if>
            <if test="userNickname != null">user_nickname = #{userNickname,jdbcType=VARCHAR},</if>
            <if test="userEmail != null">user_email = #{userEmail,jdbcType=VARCHAR},</if>
            <if test="userUrl != null">user_url = #{userUrl,jdbcType=VARCHAR},</if>
            <if test="userAvatar != null">user_avatar = #{userAvatar,jdbcType=VARCHAR},</if>
            <if test="userLastLoginIp != null">user_last_login_ip = #{userLastLoginIp,jdbcType=VARCHAR},</if>
            <if test="userRegisterTime != null">user_register_time = #{userRegisterTime,jdbcType=TIMESTAMP},</if>
            <if test="userLastLoginTime != null">user_last_login_time = #{userLastLoginTime,jdbcType=TIMESTAMP},</if>
            <if test="userStatus != null">user_status = #{userStatus,jdbcType=INTEGER},</if>
            <if test="userRole != null">user_role = #{userRole,jdbcType=VARCHAR},</if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <insert id="insertUser" parameterType="com.husky.entity.User">
        insert into user
        (user_id, user_name, user_pass,
         user_nickname, user_email, user_url,
         user_avatar, user_last_login_ip, user_register_time,
         user_last_login_time, user_status, user_role)
        values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPass,jdbcType=VARCHAR},
        #{userNickname,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userUrl,jdbcType=VARCHAR},
        #{userAvatar,jdbcType=VARCHAR}, #{userLastLoginIp,jdbcType=VARCHAR}, #{userRegisterTime,jdbcType=TIMESTAMP},
        #{userLastLoginTime,jdbcType=TIMESTAMP}, #{userStatus,jdbcType=INTEGER}, #{userRole,jdbcType=VARCHAR})
    </insert>
    <!--查询注册的用户名或邮箱是否存在-->
    <select id="selectNameOrEmail" parameterType="String" resultType="java.lang.Integer">
        select 1 from user
        <where>
            user_name=#{param1} or user_email=#{param2} LIMIT 1;
        </where>
    </select>

    <!--根据角色查询用户-->
    <select id="selectUserRole" resultType="com.husky.entity.User">
        select <include refid="Base_Column_List"/>
        from user
    </select>

    <!--根据id查询用户
    User selectIdUser(Integer id);-->
    <select id="selectIdUser" parameterType="Integer" resultType="com.husky.entity.User">
        select <include refid="Base_Column_List"/>
        from user
        where user_id=#{userId,jdbcType=INTEGER}
    </select>

    <!--根据id删除用户
    int deleteIdUser(Integer id);-->
    <delete id="deleteIdUser" parameterType="Integer">
        delete from user
        where user_id=#{userId,jdbcType=INTEGER}
    </delete>
</mapper>
